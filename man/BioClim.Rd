% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Deprecated_BioClim.R
\name{BioClim}
\alias{BioClim}
\title{Computation of Bioclimatic Variables}
\usage{
BioClim(
  Water_Var = "volumetric_soil_water_layer_1",
  Y_start = 1981,
  Y_end = 2015,
  T_res = "day",
  Extent = extent(-180, 180, -90, 90),
  DataSet = "era5-land",
  Dir = getwd(),
  verbose = TRUE,
  FileName = "NULL",
  Keep_Raw = FALSE,
  Keep_Monthly = FALSE,
  Buffer = 0.5,
  ID = "ID",
  API_User = API_User,
  API_Key = API_Key,
  Cores = 1,
  TryDown = 10,
  TimeOut = 36000,
  SingularDL = FALSE
)
}
\arguments{
\item{Water_Var}{ERA5(Land)-contained climate variable targeting water availability information. Recommended values: "volumetric_soil_water_layer_1", "total_precipitation".}

\item{Y_start}{Year ('YYYY') at which to start time series of downloaded data.}

\item{Y_end}{Year ('YYYY') at which to stop time series of downloaded data.}

\item{T_res}{Temporal resolution from which to obtain minimum and maximum values of temperature. 'hour' or 'day'}

\item{Extent}{Optional, download data according to rectangular bounding box. specify as extent() object or as a raster, a SpatialPolygonsDataFrame object, or a data.frame opbject. If Extent is a SpatialPolygonsDataFrame, this will be treated as a shapefile and the output will be cropped and masked to this shapefile. If Extent is a data.frame of geo-referenced point records, it needs to contain Lat and Lon columns as well as a non-repeating ID-column.}

\item{DataSet}{Which ERA5 data set to download data from. 'era5' or 'era5-land'.}

\item{Dir}{Directory specifying where to download data to.}

\item{verbose}{Optional, logical. Whether to report progress of the function in the console or not.}

\item{FileName}{A file name for the netcdf produced.}

\item{Keep_Raw}{Logical. Whether to keep monthly netcdf files of raw data aggregated to temporal resolution of `T_res`. Default FALSE.}

\item{Keep_Monthly}{Logical. Whether to keep monthly netcdf files of raw data aggregated to temporal resolution of months. Default FALSE.}

\item{Buffer}{Optional. Identifies how big a rectangular buffer to draw around points if Extent is a data frame of points. Buffer is expressed as centessimal degrees.}

\item{ID}{Optional. Identifies which column in Extent to use for creation of individual buffers if Extent is a data.frame.}

\item{API_User}{Character; ECMWF cds user number.}

\item{API_Key}{Character; ECMWF cds API key.}

\item{Cores}{Numeric. How many cores to use.^This can speed up downloads of long time-series. If you want output to your console during the process, use Cores = 1. Parallel processing is carried out when Cores is bigger than 1. Default is 1.}

\item{TryDown}{Optional, numeric. How often to attempt the download of each individual file that the function queries from the server. This is to circumvent having to restart the entire function when encountering connectivity issues.}

\item{TimeOut}{Numeric. The timeout for each download in seconds. Default 36000 seconds (10 hours).}

\item{SingularDL}{Logical. Whether to force download of data in one call to CDS or automatically break download requests into individual monthly downloads. Default is FALSE.}
}
\value{
A raster object containing the downloaded ERA5(-Land) data, and a NETCDF (.nc) file in the specified directory.
}
\description{
This function queries download of required essential climate variables from the [Climate Data Store](https://cds.climate.copernicus.eu/#!/home) hosted by the [Copernicus Climate Change Service (C3S)](https://cds.climate.copernicus.eu/about-c3s) for retrieval of climate data and subsequent calculation of bioclimatic variables for user-defined regions and time-frames.
}
\examples{
\dontrun{
BioClim (Water_Var = "volumetric_soil_water_layer_1", # could also be total_precipitation
Y_start = 1981,
Y_end = 2015,
T_res = "day",
Extent = extent(11.8,15.1,50.1,51.7),
DataSet = "era5-land",
Dir = getwd(),
verbose = TRUE,
FileName = "NULL",
Keep_Raw = FALSE,
Keep_Monthly = FALSE,
API_User = API_User,
API_Key = API_Key)
}

}
